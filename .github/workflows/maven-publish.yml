name: SonarCloud
on:
  push:
    branches:
      - dev
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=MohaK54_projetJEE
      - name: Upload file
        uses: actions/upload-artifact@v4
        with:
          name: package.war
          path: target/*.war
      - name: download file
        uses: actions/download-artifact@v4
        with:
          name: package.war

    jobs:
      build:
        name: Build and push Docker image
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v2

          # Build Docker image
          - name: Build Docker image
            run: docker build -t amimo54/your-image-name:latest .

          # Log in to Docker Hub
          - name: Login to Docker Hub
            run: echo "Ghazaouet54" | docker login -u "amimo54" --password-stdin

          # Push Docker image to Docker Hub
          - name: Push Docker image
            run: docker push amimo54/your-image-name:latest

